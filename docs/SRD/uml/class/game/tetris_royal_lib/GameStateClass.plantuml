@startuml GameStateClass





/' Objects '/

class GameState {
	-gameMode_ : const GameMode
	-isFinished_ : bool
	-userToPlayerTetris_ : std::map<UserID, PlayerTetris>

	+GameState(GameMode gameMode, std::vector<PlayerState>&& playerStates)
	+GameState(const GameState &)
	+GameState(GameState& &)
	+~GameState()

	+getGameMode() : GameMode {query}
	+getPlayerState(UserID userID) : shared_ptr<PlayerState>
	+getTetris(UserID userID) : TetrisPtr
	+getUserToPlayerTetris() : std::map<UserID , PlayerTetris>&
	+getWinner() : std::optional<UserID> {query}

	+setIsFinished(bool isFinished) : void

	+serializeForPlayer(UserID userID) : nlohmann::json {query}
	+serializeForViewer() : nlohmann::json {query}
}


/' Inheritance relationships '/




/' Aggregation relationships '/





/' Nested objects '/



@enduml
