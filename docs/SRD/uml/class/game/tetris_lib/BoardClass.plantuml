/' authors Ernest Jonas Rafaou '/
@startuml (id=Board)
class Board {
	-{static} height_ : static constexpr size_t
	-{static} width_ : static constexpr size_t
	-grid_ : std::array<std::array<GridCell, width_>, height_>

	-at(int xCol, int yRow) : GridCell&
	-getRow(int yRow) : std::array<GridCell , width_>&
	-getRow(int yRow) : std::array<GridCell , width_>& {query}

	-check2By2Occupied(int x, int y) : bool
	-checkEmptyRow(int yRow) : bool {query}
	-checkFullCol(int xCol) : bool {query}
	-checkFullRow(int yRow) : bool {query}
    
	-setPenaltyRow(std::array<GridCell, width_>& row) : void
	-setRow(const std::array<GridCell, width_>& row, size_t yRow) : void
	-liftRowsFrom(int yRow, size_t numRows) : void
	-dropRowsAbove(int yRow) : void

	-empty2By2Square(int x, int y) : void
	-emptyCol(int xCol) : void
	-emptyRow(int yRow) : void
	-gravity() : void

	+Board()
	+Board(const Board &)
	+Board(Board& &)
	+~Board()

	+operator=(const Board &) : Board&
	+operator=(Board& &) : Board&

	+{static} getHeight() : size_t
	+{static} getWidth() : size_t
	+get(int xCol, int yRow) : GridCell& {query}

	+checkInGrid(const Vec2& vec) : bool {query}
	+checkInGrid(const ATetromino& tetromino) : bool {query}

	+placeTetromino(shared_ptr<ATetromino> tetromino) : void
	+receivePenaltyRows(size_t numPenalty) : bool
	+destroy2By2Occupied() : void

	+update() : BoardUpdate
	+serialize() : nlohmann::json {query}
	+deserialize(const nlohmann::json& j) : void
}

@enduml