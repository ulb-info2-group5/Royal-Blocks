@startuml (id=ATetromino)

' skinparam class {
    '     BackgroundColor AntiqueWhite
    '}


abstract class ATetromino {
    - width_ : size_t = 0
    - height_ : size_t = 0
    - shape_ : TetrominoShape
    - anchorPoint_ : Vec2
    - body_ : vector<Vec2>
    '----SRS----'
    -rotationIdx_ : RotationIdex
    -prevRotationIdx_ : RotationIndex
    -*offsetData_ : const vector<vector<Vec2>>

    '----kick data----'
    # {static} O_OFFSET_DATA : const vector<vector<Vecc2>>
    # {static} I_OFFSET_DATA : const vector<vector<Vec2>>
    # {static} ZLSJT_OFFSET_DATA : const vector<vector<Vec2>>


    # ATetromino(anchorPoint : &&Vec2, body : &&vector<Vec2>, offsetData : * const vector<vector<Vec2>>, shape : TetrominoShape)
    # {static} make_clone(tetromino : const &ATetromino) : shared_ptr<ATetromino>

    + ATetromino() = delete
    + ATetromino(other : ATetromino&&) = default
    + ATetromino(other : const ATetromino&) = default

    '----Destructor----'
    + <<virtual>> ~ATetromino() = default

    '----Factory----'
    + {static} makeTetromino(shape : TetrominoShape, anchorPoint : &&Vec2) : shared_ptr<ATetromino>

    '----Getters----'
    + getWidth() : const size_t
    + getHeight() : const size_t
    + getShape() : const TetrominoShape
    + getAnchorPoint() : const &Vec2   
    + getBody() : const &vector<Vec2>
    + getRotationIndex() : const &RotationIndex
    + getPrevRotationIndex() : const &RotationIndex

    + getNumOfTests() : const uint8_t
    + getNthOffset(kickIndex : uint8_t) : const unique_ptr<ATetromino>

    '----Setters----'
    + setAnchorPoint(anchorPoint : const &Vec2) : void
    + move(tetrominoMove : TetrominoMove, reverse : bool = false) : void
    + rotate(rotateClockwise : bool) : void

    '----Action----'

    '----Comparisons----'
    + operator==(other : const ATetromino&) : bool

    + <<virtual>> clone() : const shared_ptr<Tetromino> = 0

    + serialize() : const nlohmann::json
    
}


enum TetrominoShape {
    Z
    L
    O
    S
    I
    J
    T
    NUM_TETROMINOSHAPE
}

class TetrominoI extends ATetromino {

    +TetrominoI(anchorPoint : &&Vec2 )

    + clone() : const shared_ptr<ATetromino>
}
class TetrominoO extends ATetromino {

    +TetrominoO(anchorPoint : &&Vec2 )

    + clone() : const shared_ptr<ATetromino>

}
class TetrominoT extends ATetromino {

    +TetrominoT(anchorPoint : &&Vec2)

    + clone() : const shared_ptr<ATetromino>
}

class TetrominoS extends ATetromino {

    +TetrominoS(anchorPoint : &&Vec2 )

    + clone() : const shared_ptr<ATetromino>
}

class TetrominoZ extends ATetromino {

    +TetrominoZ(anchorPoint : &&Vec2)

    + clone() : const shared_ptr<ATetromino>
}

class TetrominoL extends ATetromino {

    +TetrominoL(anchorPoint : &&Vec2)

    + clone() : const shared_ptr<ATetromino>
}

class TetrominoJ extends ATetromino {

    +TetrominoZ(anchorPoint : &&Vec2)

    + clone() : const shared_ptr<ATetromino>
}

class MiniTetromino extends ATetromino {
    + MiniTetromino(anchorPoint : &&Vec2)

    + clone() : const shared_ptr<ATetromino>
}

@enduml