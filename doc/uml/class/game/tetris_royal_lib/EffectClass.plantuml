@startuml EffectClass

skinparam linetype ortho
skinparam class {
    BackgroundColor AliceBlue
}

/' Objects '/

abstract class ATimedEffect {
	#ATimedEffect()
	+~ATimedEffect()
	+{abstract} isFinished() : bool {query}
	+{abstract} getElapsedTime() : double {query}
	+{abstract} serialize() : nlohmann::json {query}
	+tetrominoPlaced() : void
	+tick() : void
}


class Blackout {
	-{static} TICKS_NUM : static constexpr size_t
	+Blackout()
	+~Blackout()
}


class InputLock {
	-{static} PIECES_NUM : static constexpr size_t
	+InputLock()
	+~InputLock()
}


class PlacementTimedEffect {
	-numPlacements_ : size_t
	-remainingPlacements_ : size_t

	#PlacementTimedEffect(size_t placementsNum)
	#PlacementTimedEffect(const PlacementTimedEffect &)
	+~PlacementTimedEffect()

	+operator==(const PlacementTimedEffect& other) : bool {query}
	+operator<<(std::ostream& os, const PlacementTimedEffect& placementTimedEffect) : std :: ostream&

	+getElapsedTime() : double {query}
	+isFinished() : bool {query}
	+tetrominoPlaced() : void
}


class ReverseControls {
	-{static} PIECES_NUM : static constexpr size_t
	+ReverseControls()
	+~ReverseControls()
}


class SlowDown {
	-{static} SLOW_DOWN_FACTOR : static constexpr size_t
	-{static} TICKS_NUM : static constexpr size_t

	+SlowDown()
	+~SlowDown()
	+shouldIgnoreTick() : bool
}


class SpeedUp {
	-{static} TICKS_NUM : static constexpr size_t

	+SpeedUp()
	+~SpeedUp()

	+{static} SpeedUpFactor : static constexpr size_t
}


class TickTimedEffect {
	-numTicks_ : size_t
	-remainingTicks_ : size_t

	#TickTimedEffect(size_t ticksNum)
	#TickTimedEffect(const TickTimedEffect &)
	+~TickTimedEffect()

	+operator==(const TickTimedEffect& other) : bool {query}
	+operator<<(std::ostream& os, const TickTimedEffect& tickTimedEffect) : std :: ostream&

	+getElapsedTime() : double {query}
	+isFinished() : bool {query}
	+tick() : void
}


class TimedBonus {
	-bonusType_ : BonusType

	#TimedBonus(BonusType bonusType)
	#TimedBonus(const TimedBonus &)
	#TimedBonus(TimedBonus& &)
	+~TimedBonus()

	+getBonusType() : BonusType {query}
	+{static} makeBonus(BonusType bonusType) : shared_ptr<TimedBonus>

	+serialize() : nlohmann::json {query}
}


class TimedPenalty {
	-penaltyType_ : PenaltyType
	#TimedPenalty(PenaltyType penaltyType)
	+~TimedPenalty()
	+getPenaltyType() : PenaltyType {query}
	+{static} makePenalty(PenaltyType bonusType) : shared_ptr<TimedPenalty>
	+serialize() : nlohmann::json {query}
}


enum BonusType {
	MiniTetrominoes
	NumBonusType
	SlowDown
}


enum PenaltyType {
	Blackout
	InputLock
	Lightning
	NumPenaltyType
	ReverseControls
	SpeedUp
}





/' Inheritance relationships '/

ATimedEffect <|-- PlacementTimedEffect


ATimedEffect <|-- TickTimedEffect


ATimedEffect <|-- TimedBonus


ATimedEffect <|-- TimedPenalty


PlacementTimedEffect <|-- InputLock


PlacementTimedEffect <|-- ReverseControls


TickTimedEffect <|-- Blackout


TickTimedEffect <|-- SlowDown


TickTimedEffect <|-- SpeedUp


TimedBonus <|-- SlowDown


TimedPenalty <|-- Blackout


TimedPenalty <|-- InputLock


TimedPenalty <|-- ReverseControls


TimedPenalty <|-- SpeedUp





/' Aggregation relationships '/

TimedBonus *-- BonusType


TimedPenalty *-- PenaltyType






/' Nested objects '/



@enduml
