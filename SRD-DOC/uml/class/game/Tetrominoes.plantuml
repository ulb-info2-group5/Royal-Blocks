@startuml (id=Tetromino)

' skinparam class {
'     BackgroundColor AntiqueWhite
' }

abstract class AbstractTetromino {
    - width_ : int
    - height_ : int
    - color_ : unsigned int
    - body_ : vector<Coordinate>
    - anchorPoint_ : Coordinate
    'coordinate of the center's for all 4 rotation states
    - centers_ : vector<Coordinate>
    - rotationState_ : RotationState

    # TetrOmino(initializer_list<Coordinate> coordinates)

    + getWidth() : int  
    + getHeight() : int
    + getBody() : vector<Coordinate>
    + getColor(): unsigned int
    + getAnchorPoint(): Coordinate

    'factory
    + {static} makeTetromino(shape : TetraminoShape, anchorPoint : Coordinate)

    + tryMove(direction : Direction)
    + tryRotate()
}


enum TetrominoShape {
    I
    O
    T
    S
    Z
    L
    J
}

enum Direction {
    left
    right
    down
}


enum Color {

}


class TetrominoI extends AbstractTetromino { 
    +TetrominoI()
}

class TetrominoO extends AbstractTetromino { 
    'overriding'
    tryRotate()
    +TetrominoO()

}

class TetrominoT extends AbstractTetromino { 
    +TetrominoT()
}

class TetrominoS extends AbstractTetromino { 
    +TetrominoS()
}

class TetrominoZ extends AbstractTetromino { 
    +TetrominoZ()
}

class TetrominoL extends AbstractTetromino { 
    +TetrominoL()
}

class TetrominoJ extends AbstractTetromino { 
    +TetrominoZ()
}

AbstactPiece --|> AbstractTetromino
AbstractTetromino.-> TetrominoShape : uses
AbstractTetromino .-> Direction : uses

@enduml