@startuml Connexion

' TODO: This diagram is not finshed yet and will be subject to modifications
'
' Credential contains: username & password

class RegisterManager <<Client>> {
    - credentials_ : Credentials
    - registerUI_ : RegisterUI
    - _getUsername() : string
    - _getPassword() : string
    - _alreadyRegistered() : bool
    + run() : void
}

class RegisterUI {
    - usernameInput_ : string
    - passwordInput_ : string
    + RegisterUI()
    + Display() : void
    + ErrorDisplay() : void
    + getUsername() : string
    + getPassword() : string
    + setUsername(username: string) : void
    + setPassword(password: string) : void
}

class LoginManager <<Client>> {
    - loginUI_ : LoginUI 
    - credentials_ : Credentials
    'username lets us initialize the username field in the loginUI
    'to avoid asking it a second time (first time in the register side)
    'if not empty, it will call set_username on the loginUI
    + LoginManager(username="") : string 
    + tryLogin() : bool
}

class LoginUI {
    - usernameInput_ : string
    - passwordInput_ : string
    + LoginUI()
    + Display() : void
    + ErrorDisplay() : void
    + getUsername() : string
    + getPassword() : string
    + setUsername(username: string) : void
    + setPassword(password: string) : void
}

class AccountServer <<Server>> {
    - accountsDatabase_ : Database
    + CreateAccount(credentials: Credentials) : bool
    + AccountAlreadyExists(credentials: Credentials) : bool
}


RegisterManager  -  LoginManager : starts >
RegisterManager "1" --- "1" RegisterUI : gets credentials >
LoginManager "1" --- "1" LoginUI : gets credentials >
RegisterManager --- AccountServer : send/receive info
LoginManager --- AccountServer : send/receive info

@enduml
